# Generated by Django 4.1.7 on 2023-03-15 14:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("trak", "0005_alter_address_city_alter_contact_email"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="additionalinfo",
            options={"verbose_name": "additional info", "verbose_name_plural": "additional info"},
        ),
        migrations.AlterField(
            model_name="address",
            name="address1",
            field=models.CharField(max_length=50, verbose_name="address 1"),
        ),
        migrations.AlterField(
            model_name="address",
            name="address2",
            field=models.CharField(
                blank=True, default=None, max_length=50, null=True, verbose_name="address 2"
            ),
        ),
        migrations.AlterField(
            model_name="handler",
            name="can_esign",
            field=models.BooleanField(
                blank=True, null=True, verbose_name="can electronically sign"
            ),
        ),
        migrations.AlterField(
            model_name="handler",
            name="contact",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="trak.contact",
                verbose_name="contact information",
            ),
        ),
        migrations.AlterField(
            model_name="handler",
            name="epa_id",
            field=models.CharField(max_length=25, unique=True, verbose_name="EPA ID number"),
        ),
        migrations.AlterField(
            model_name="handler",
            name="limited_esign",
            field=models.BooleanField(
                blank=True, null=True, verbose_name="limited electronic signing ability"
            ),
        ),
        migrations.AlterField(
            model_name="handler",
            name="registered_emanifest_user",
            field=models.BooleanField(
                blank=True, default=False, null=True, verbose_name="has registered e-manifest user"
            ),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="contains_residue_or_rejection",
            field=models.BooleanField(
                blank=True, null=True, verbose_name="contains previous rejection or residue waste"
            ),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="import_flag",
            field=models.BooleanField(blank=True, default=False, verbose_name="import"),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="import_info",
            field=models.JSONField(blank=True, null=True, verbose_name="import information"),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="next_transfer_time",
            field=models.DateTimeField(blank=True, null=True, verbose_name="next transfer time"),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="original_sub_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("FullElectronic", "Full Electronic"),
                    ("DataImage5Copy", "Data + Image"),
                    ("Hybrid", "Hybrid"),
                    ("Image", "Image"),
                ],
                max_length=25,
                null=True,
                verbose_name="original submission type",
            ),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="potential_ship_date",
            field=models.DateTimeField(blank=True, null=True, verbose_name="potential ship date"),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="residue_new_mtn",
            field=models.JSONField(blank=True, default=list, verbose_name="residue new MTN"),
        ),
        migrations.AlterField(
            model_name="manifest",
            name="tsd",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="designated_facility",
                to="trak.manifesthandler",
                verbose_name="designated facility",
            ),
        ),
        migrations.AlterField(
            model_name="site",
            name="epa_site",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="trak.handler",
                verbose_name="handler",
            ),
        ),
        migrations.AlterField(
            model_name="site",
            name="last_rcra_sync",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="last sync with RCRAInfo"
            ),
        ),
        migrations.AlterField(
            model_name="site",
            name="name",
            field=models.CharField(
                max_length=200,
                validators=[
                    django.core.validators.MinValueValidator(
                        2, "site aliases must be longer than 2 characters"
                    )
                ],
                verbose_name="site alias",
            ),
        ),
        migrations.AlterField(
            model_name="wasteline",
            name="discrepancy_info",
            field=models.JSONField(
                blank=True, null=True, verbose_name="discrepancy-residue information"
            ),
        ),
        migrations.AlterField(
            model_name="wasteline",
            name="line_number",
            field=models.PositiveIntegerField(verbose_name="waste line number"),
        ),
        migrations.AlterField(
            model_name="wasteline",
            name="management_method",
            field=models.JSONField(blank=True, null=True, verbose_name="management method code"),
        ),
        migrations.AlterField(
            model_name="wasteline",
            name="pcb",
            field=models.BooleanField(verbose_name="contains PCBs"),
        ),
    ]
