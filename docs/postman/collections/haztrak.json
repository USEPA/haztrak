{
	"info": {
		"_postman_id": "8de5bed6-edc9-492c-9bf9-d890621deee3",
		"name": "haztrak",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "15928187-8de5bed6-edc9-492c-9bf9-d890621deee3"
	},
	"item": [
		{
			"name": "trak/site",
			"item": [
				{
					"name": "Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d8d947d-4bb3-4a0b-9729-095cdc180bbc",
								"exec": [
									"pm.test(\"Site returns 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "814eec41-5498-46b1-a008-72919a7a1c05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/trak/site/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trak",
								"site",
								""
							]
						},
						"description": "sites affilated with user"
					},
					"response": [
						{
							"id": "6856f49c-dc3c-41b8-991f-a6aa7771c2b9",
							"name": "testuser1 sites",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/trak/site/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"trak",
										"site",
										""
									]
								},
								"description": "sites affilated with user"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Aug 2022 13:29:08 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.10.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "1124"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"My Site\",\n        \"siteHandler\": {\n            \"epaSiteId\": \"VATESTGEN001\",\n            \"name\": \"TEST TRANSPORTER 2 OF VA\",\n            \"siteAddress\": {\n                \"streetNumber\": \"123\",\n                \"address1\": \"VA TEST GEN 2021 WAY\",\n                \"city\": \"Arlington\",\n                \"state\": {\n                    \"code\": \"VA\",\n                    \"name\": \"Virginia\"\n                },\n                \"country\": {\n                    \"code\": \"US\",\n                    \"name\": \"United States\"\n                },\n                \"zip\": \"20022\"\n            },\n            \"mailingAddress\": {\n                \"streetNumber\": \"123\",\n                \"address1\": \"VA TEST GEN 2021 WAY\",\n                \"city\": \"Arlington\",\n                \"state\": {\n                    \"code\": \"VA\",\n                    \"name\": \"Virginia\"\n                },\n                \"country\": {\n                    \"code\": \"US\",\n                    \"name\": \"United States\"\n                },\n                \"zip\": \"20022\"\n            },\n            \"contact\": {\n                \"test\": \"Test\"\n            },\n            \"hasRegisteredEmanifestUser\": true,\n            \"gisPrimary\": false\n        }\n    },\n    {\n        \"name\": \"My Test TSD Site\",\n        \"siteHandler\": {\n            \"epaSiteId\": \"VATESTTSDF03\",\n            \"name\": \"VA TEST TSDF 2021\",\n            \"siteAddress\": {\n                \"streetNumber\": \"123\",\n                \"address1\": \"VA TEST GEN 2021 WAY\",\n                \"city\": \"Arlington\",\n                \"state\": {\n                    \"code\": \"VA\",\n                    \"name\": \"Virginia\"\n                },\n                \"country\": {\n                    \"code\": \"US\",\n                    \"name\": \"United States\"\n                },\n                \"zip\": \"20022\"\n            },\n            \"mailingAddress\": {\n                \"streetNumber\": \"123\",\n                \"address1\": \"VA TEST GEN 2021 WAY\",\n                \"city\": \"Arlington\",\n                \"state\": {\n                    \"code\": \"VA\",\n                    \"name\": \"Virginia\"\n                },\n                \"country\": {\n                    \"code\": \"US\",\n                    \"name\": \"United States\"\n                },\n                \"zip\": \"20022\"\n            },\n            \"contact\": {\n                \"test\": \"test\"\n            },\n            \"hasRegisteredEmanifestUser\": false,\n            \"gisPrimary\": false\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Site Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39d8209-e989-4761-b846-81656c0c91db",
								"exec": [
									"console.log(pm.environment.get(\"userSite\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1f615377-db32-4660-ab57-f6a8e87de122",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/trak/site/{{userSite}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trak",
								"site",
								"{{userSite}}"
							]
						}
					},
					"response": [
						{
							"id": "166233bf-13c1-4974-b552-174e820fc614",
							"name": "VATESTGEN001",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/trak/site/{{userSite}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"trak",
										"site",
										"{{userSite}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Aug 2022 13:54:52 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.10.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "559"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"My Site\",\n    \"siteHandler\": {\n        \"epaSiteId\": \"VATESTGEN001\",\n        \"name\": \"TEST TRANSPORTER 2 OF VA\",\n        \"siteAddress\": {\n            \"streetNumber\": \"123\",\n            \"address1\": \"VA TEST GEN 2021 WAY\",\n            \"city\": \"Arlington\",\n            \"state\": {\n                \"code\": \"VA\",\n                \"name\": \"Virginia\"\n            },\n            \"country\": {\n                \"code\": \"US\",\n                \"name\": \"United States\"\n            },\n            \"zip\": \"20022\"\n        },\n        \"mailingAddress\": {\n            \"streetNumber\": \"123\",\n            \"address1\": \"VA TEST GEN 2021 WAY\",\n            \"city\": \"Arlington\",\n            \"state\": {\n                \"code\": \"VA\",\n                \"name\": \"Virginia\"\n            },\n            \"country\": {\n                \"code\": \"US\",\n                \"name\": \"United States\"\n            },\n            \"zip\": \"20022\"\n        },\n        \"contact\": {\n            \"test\": \"Test\"\n        },\n        \"hasRegisteredEmanifestUser\": true,\n        \"gisPrimary\": false\n    }\n}"
						}
					]
				},
				{
					"name": "Site Manifests",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61cadb23-c4b1-40f0-8365-ef7bbd1007b9",
								"exec": [
									"pm.test(\"set one of the mtn to manifestMtn\", () => {",
									"    var mtns = pm.response.json().generator",
									"    // pm.expect(pm.environment.get(\"manifestMtn\")).to.have('string')",
									"    if (mtns.length != 0){",
									"      pm.environment.set(\"manifestMtn\", mtns[0])",
									"  } else {",
									"      pm.expect.fail(\"no user sites available\")",
									"  }",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1995e469-6dd3-420d-b2a9-39d854064dc9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/trak/site/{{userSite}}/manifest",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"trak",
								"site",
								"{{userSite}}",
								"manifest"
							]
						}
					},
					"response": []
				}
			],
			"id": "7c4bb851-6e82-4bda-bd40-5db346dc8c87"
		},
		{
			"name": "manifest",
			"item": [
				{
					"name": "mtn",
					"id": "811bfa16-9135-4231-9395-282cd3c73cc5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"id": "3dfe1a23-9e46-409c-8305-803e452d4f4b"
		},
		{
			"name": "signup",
			"id": "f578fbfd-9304-44c5-b64d-2b657146e46f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"otherusername\",\r\n    \"password\": \"password1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user/signup/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"signup",
						""
					]
				},
				"description": "signup for an account with haztrak"
			},
			"response": [
				{
					"id": "0d380a3c-2459-4904-9c0c-6231e2dbf826",
					"name": "username exists",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"otherusername\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/signup/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"signup",
								""
							]
						},
						"description": "signup for an account with haztrak"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 11 Aug 2022 14:04:36 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.10.6"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "POST, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"username taken, please choose another\"\n}"
				},
				{
					"id": "e519b0ca-a366-46a2-a449-c1facc9c2954",
					"name": "success with token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"otherusername\",\r\n    \"password\": \"password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/signup/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"signup",
								""
							]
						},
						"description": "signup for an account with haztrak"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 11 Aug 2022 14:05:20 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.10.6"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "POST, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "53"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"80cc899bc7f7a383f4e81d83910a9bb50e002edb\"\n}"
				}
			]
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c0d9457-9510-4e88-8f3e-7d7a7f89abcc",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "882ebd01-85cd-4227-adb9-5a428f098f34",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user/login/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"login",
						""
					]
				}
			},
			"response": [
				{
					"id": "9945d927-e7bc-4842-ba6d-a429ef3b029c",
					"name": "login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login",
								""
							]
						}
					},
					"_postman_previewlanguage": "Text",
					"header": null,
					"cookie": [],
					"body": "{\n    \"user\": \"testuser1\",\n    \"token\": \"b0601e96a81aa6b13d874911fdd3e0cc6e10803d\"\n}"
				}
			]
		},
		{
			"name": "Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fed5908b-df9a-4a92-97eb-5419aa3188a0",
						"exec": [
							"pm.test(\"profile returns 200\", () => {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Username is same as username sent\", () => {",
							"    var returnedUser = pm.response.json().user",
							"    pm.expect(pm.environment.get(\"user\")).to.equal(returnedUser)",
							"})",
							"",
							"",
							"pm.test(\"If user has sites, add to environment variables\", () => {",
							"  let userSites = pm.response.json().epaSites",
							"  if (userSites.length != 0){",
							"    pm.environment.set(\"userSite\", userSites[0])",
							"  } else {",
							"    pm.expect.fail(\"no user sites available\")",
							"  }",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9ed74e91-1043-4d25-9181-37ee3813d24e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/user/profile",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"profile"
					]
				}
			},
			"response": [
				{
					"id": "1fdf366f-d159-494c-a5e0-cc586481b3be",
					"name": "testuser1",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 11 Aug 2022 13:33:23 GMT"
						},
						{
							"key": "Server",
							"value": "WSGIServer/0.2 CPython/3.10.6"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Vary",
							"value": "Accept, Origin"
						},
						{
							"key": "Allow",
							"value": "GET, HEAD, OPTIONS"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "152"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"user\": \"testuser1\",\n    \"rcraAPIID\": \"asdfasdfasdf\",\n    \"rcraAPIKey\": \"blah lbha\",\n    \"epaSites\": [\n        \"VATESTGEN001\",\n        \"VATESTTSDF03\"\n    ],\n    \"phoneNumber\": \"2142555555\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Bearer  {{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "67929e16-5133-424b-a879-ddd096a6d7dc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0128cb41-6f37-438a-8137-678cab9fa621",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}