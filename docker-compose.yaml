version: '3.9'
services:
  server:
    container_name: ht-server
    restart: unless-stopped
    image: haztrak-server
    build:
      context: ./server
    ports:
      - '8000:8000'
    volumes:
      - ./server:/app
    environment:
      DJANGO_SETTINGS_MODULE: 'haztrak.settings.dev'
      HT_HOST: 'localhost'
      HT_SECRET_KEY: ${HT_SECRET_KEY}
      HT_DEBUG: ${HT_DEBUG}
      HT_LOG_LEVEL: ${HT_LOG_LEVEL}
      HT_TIMEZONE: ${HT_TIMEZONE}
      HT_RCRAINFO_ENV: ${HT_RCRAINFO_ENV}
      HT_CORS_DOMAIN: ${HT_CORS_DOMAIN}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      HT_CACHE_URL: ${HT_CACHE_URL}
      HT_DB_ENGINE: ${HT_DB_ENGINE}
      HT_DB_NAME: ${HT_DB_NAME}
      HT_DB_USER: ${HT_DB_USER}
      HT_DB_PASSWORD: ${HT_DB_PASSWORD}
      HT_DB_HOST: postgres
      HT_DB_PORT: ${HT_DB_PORT}
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    container_name: ht-redis
    image: 'redis:alpine'
    ports:
      - '6379:6379'

  celery-worker:
    restart: unless-stopped
    container_name: ht-celery-worker
    image: haztrak-server
    volumes:
      - ./server:/app
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_LOG_LEVEL: ${CELERY_LOG_LEVEL}
      HT_DB_ENGINE: ${HT_DB_ENGINE}
      HT_DB_NAME: ${HT_DB_NAME}
      HT_DB_USER: ${HT_DB_USER}
      HT_DB_PASSWORD: ${HT_DB_PASSWORD}
      HT_DB_HOST: postgres
      HT_DB_PORT: ${HT_DB_PORT}
    command: python manage.py celery_worker
    depends_on:
      - redis
      - server

  celery-beat:
    restart: unless-stopped
    container_name: celery-beat
    image: haztrak-server
    volumes:
      - ./server:/app
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_LOG_LEVEL: ${CELERY_LOG_LEVEL}
      HT_DB_ENGINE: ${HT_DB_ENGINE}
      HT_DB_NAME: ${HT_DB_NAME}
      HT_DB_USER: ${HT_DB_USER}
      HT_DB_PASSWORD: ${HT_DB_PASSWORD}
      HT_DB_HOST: postgres
      HT_DB_PORT: ${HT_DB_PORT}
    command: python manage.py celery_beat
    depends_on:
      - redis
      - server

  postgres:
    restart: unless-stopped
    container_name: postgres
    image: 'postgres:14'
    environment:
      POSTGRES_DB: ${HT_DB_NAME}
      POSTGRES_USER: ${HT_DB_USER}
      POSTGRES_PASSWORD: ${HT_DB_PASSWORD}
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $HT_DB_USER -d $HT_DB_NAME']
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - development:/var/lib/postgresql/data

  client:
    container_name: ht-client
    build:
      context: ./client
      target: dev
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
    environment:
      VITE_HT_API_URL: ${VITE_HT_API_URL}
      VITE_HT_ENV: ${VITE_HT_ENV}
    command: sh -c "cd /app; npm install; npm start"

volumes:
  development:
